{"version":3,"sources":["assets/logo.svg","base/hooks/api-action.ts","base/hooks/request.ts","base/components/section/index.tsx","modules/application/details/microfrontend-list.tsx","modules/application/details/namespace-list.tsx","base/components/page/index.tsx","modules/application/fetch.tsx","modules/application/details/index.tsx","modules/application/list.tsx","modules/application/index.tsx","modules/microfrontend/form.tsx","modules/microfrontend/details.tsx","modules/microfrontend/new.tsx","modules/microfrontend/list.tsx","modules/microfrontend/index.tsx","base/hooks/query-param.ts","modules/github/import.tsx","modules/github/repositories.tsx","modules/github/index.tsx","modules/account/profile.tsx","modules/namespace/details/deploy-list.tsx","modules/namespace/fetch.tsx","modules/namespace/details/index.tsx","modules/namespace/deploy.tsx","modules/namespace/index.tsx","app/home/dashboards.tsx","base/hooks/local-storage.ts","base/hooks/user.ts","app/home/index.tsx","modules/github/login.tsx","modules/account/logout.tsx","modules/landing/index.tsx","app/router.tsx","app/index.tsx","index.tsx"],"names":["module","exports","useApiAction","url","options","key","Math","ceil","random","toString","method","useLoggedApiRequest","manual","data","loading","error","makeRequest","showMessage","type","messageOptions","message","messageContructor","content","apply","params","default","config","a","response","console","log","status","BASE_URL","useApiRequest","makeUseAxios","axios","Axios","create","baseURL","useGithubApiRequest","configureLoggedUser","loggedUser","token","headers","Authorization","token_type","access_token","interceptors","use","res","localStorage","removeItem","window","location","reload","Promise","reject","configure","configureLoggedApiRequest","api","github","Title","Typography","Section","this","props","title","children","level","justify","size","React","MicrofrontendList","applicationId","microfrontends","refetch","useEffect","gutter","map","microfrontend","span","id","name","extra","to","NamespaceList","namespaces","Page","history","useHistory","actions","subTitle","rootPage","className","onBack","goBack","style","marginTop","FetchApplication","applicationIdProp","useParams","application","loadingApplication","ApplicationDetails","success","savingProfile","saveApplication","deployingApplication","deployApplication","gettingNamespaces","refetchNamespaces","onFinish","initialValues","Item","label","htmlType","length","onClick","ApplicationList","applications","itemLayout","dataSource","renderItem","Meta","description","ApplicationHome","match","useRouteMatch","path","NewMicrofrontend","isNew","syncMicrofrontend","versions","result","createmicrofrontend","values","handleSyncClick","labelCol","onFinishFailed","errorInfo","version","color","createdAt","MicrofrontendDetails","microfrontendId","MicrofrontendsHome","exact","useQuery","URLSearchParams","useLocation","search","ImportRepository","owner","repositoryName","repositoryFullName","Form","useForm","form","useState","importType","setImportType","nameAlreadyChanged","setNameAlreadyChanged","shouldShowImportType","shouldShowApplicationIdField","repository","loadingRepository","importedApplication","importingApplication","importApplication","importedMicrofrontend","importingMicrofrotend","importMicrofrontend","packageName","onValuesChange","undefined","setFieldsValue","Group","value","Button","disabled","importApplicationId","get","IconText","icon","text","createElement","marginRight","Repos","searchText","setSearchText","repos","queryParam","getUrlToImport","repo","full_name","placeholder","prefix","SearchOutlined","onChange","e","target","filter","indexOf","StarOutlined","stargazers_count","MessageOutlined","open_issues","avatar","GithubOutlined","GithubHome","Profiile","profile","saveProfile","DeployList","namespaceId","deploys","deploy","FetchNamespace","namespaceIdProp","namespace","loadingNamespace","confirm","Modal","createDeleteConfirm","deleteNamespace","ExclamationCircleOutlined","okText","okType","cancelText","onOk","NamespaceDetails","savingNamespace","saveNamespace","deletedNamespace","errorDeleting","deletingNamespace","namespaceFields","deleteButton","isMain","placement","Details","New","MicrofrontendVersion","required","Option","NamespaceDeploy","nextDeploy","savingNextDeploy","saveNextDeploy","micro","Dashboards","useLocalStorage","initialValue","item","JSON","parse","getItem","storedValue","setStoredValue","setItem","stringify","useLoggedUser","auth","setAuth","Sider","Layout","Header","Content","Footer","hashCode","str","hash","i","charCodeAt","intToRGB","c","toUpperCase","substring","FullApp","collapsed","setCollapsed","items","HomeOutlined","rootComponent","GithubFilled","Github","SolutionOutlined","Application","UnorderedListOutlined","Microfrontend","Profile","Namespace","reverseItems","Object","assign","reverse","selectedMenuIndex","findIndex","pathname","replace","startsWith","iconProps","collapsible","trigger","src","Logo","alt","selectedKeys","theme","mode","MenuUnfoldOutlined","MenuFoldOutlined","overlay","Divider","backgroundColor","split","charAt","join","padding","RootComponent","textAlign","App","Login","handleLogin","handleError","code","href","Logout","clearValue","REDIRECT_URI","origin","process","LandingPage","NotLoggedIn","setLoggedUser","push","LoggedIn","requestConfigured","setRequestConfigured","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90699ec0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6dc431e7.svg\";","import { Method, AxiosRequestConfig } from 'axios';\nimport { useLoggedApiRequest } from './request';\nimport { message } from 'antd';\n\ntype MessageBuilder = (...args: any[]) => string;\n\nconst useApiAction = (\n  url: string,\n  options: {\n    method?: Method;\n    message?: {\n      success?: MessageBuilder | string;\n      loading?: MessageBuilder | string;\n      error?: MessageBuilder | string;\n    };\n  }\n): [any, Function] => {\n  const key = Math.ceil(Math.random() * 10000).toString();\n  const { method = 'POST' } = options;\n  const [{ data, loading, error }, makeRequest] = useLoggedApiRequest({ url, method }, { manual: true });\n\n  const showMessage = (type: 'loading' | 'success' | 'error', messageOptions?: { params: any[]; default: string }) => {\n    if (options.message && options.message[type]) {\n      const messageContructor = options.message[type];\n      let content = '';\n      if (typeof messageContructor === 'string') {\n        content = messageContructor;\n      } else if (typeof messageContructor === 'function') {\n        content = messageContructor.apply(null, messageOptions?.params || []);\n      }\n\n      message[type]({ content, key });\n    } else if (messageOptions?.default) {\n      message[type]({ content: messageOptions.default, key });\n    }\n  };\n\n  const execute = async (config?: AxiosRequestConfig) => {\n    showMessage('loading');\n    try {\n      await makeRequest(config);\n      showMessage('success');\n    } catch ({ response }) {\n      console.log(`Error on request ${method} to ${url}`, response);\n      showMessage('error', {\n        default: response.status >= 500 ? 'Server error. Try again later!' : 'Error processing your request.',\n        params: [response],\n      });\n    }\n  };\n\n  return [{ data, loading, error }, execute];\n};\n\nexport default useApiAction;\n","import { makeUseAxios } from 'axios-hooks';\n\nimport Axios from 'axios';\n\nconst BASE_URL =\n  process.env.NODE_ENV === 'development' ? 'http://localhost:8080/' : 'https://microfrontend-marketplace.appspot.com/';\nexport const useApiRequest = makeUseAxios({\n  axios: Axios.create({\n    baseURL: BASE_URL,\n  }),\n});\n\nexport const useLoggedApiRequest = makeUseAxios({\n  axios: null,\n});\n\nconst configureLoggedApiRequest = (token: any) => {\n  const axios = Axios.create({\n    baseURL: BASE_URL,\n    headers: {\n      Authorization: `${token.token_type} ${token.access_token}`,\n    },\n  });\n  axios.interceptors.response.use(\n    (res) => {\n      return res;\n    },\n    (error) => {\n      const { response } = error;\n      if (response.status === 401) {\n        localStorage.removeItem('auth');\n        window.location.reload();\n        return;\n      }\n      return Promise.reject(error);\n    }\n  );\n  useLoggedApiRequest.configure({ axios });\n};\n\nexport const useGithubApiRequest = makeUseAxios({\n  axios: null,\n});\n\nconst configureGithubApiRequest = (token: any) => {\n  useGithubApiRequest.configure({\n    axios: Axios.create({\n      baseURL: 'https://api.github.com',\n      headers: {\n        Authorization: `${token.token_type} ${token.access_token}`,\n      },\n    }),\n  });\n};\n\nexport const configureLoggedUser = (loggedUser: any) => {\n  configureLoggedApiRequest(loggedUser.api);\n  configureGithubApiRequest(loggedUser.github);\n};\n\nexport { default as useApiAction } from './api-action';\n","import * as React from 'react';\n\nimport { Typography, Row, Spin } from 'antd';\nconst { Title } = Typography;\n\nexport interface ISectionProps {\n  title: string;\n  children: React.ReactNode;\n  loading?: Boolean;\n}\n\nexport default class Section extends React.Component<ISectionProps> {\n  public render() {\n    const { title, children, loading } = this.props;\n    return (\n      <section>\n        <Title level={4}>{title}</Title>\n        {loading ? (\n          <Row justify=\"center\">\n            <Spin size=\"large\" />\n          </Row>\n        ) : (\n            children\n          )}\n      </section>\n    );\n  }\n}\n","import React, { useEffect } from 'react';\nimport { Card, Col, Row } from 'antd';\nimport { useLoggedApiRequest } from 'base/hooks/request';\nimport { Link } from 'react-router-dom';\nimport Section from 'base/components/section';\n\ninterface IMicrofrontendListProps {\n  applicationId: string;\n}\n\nconst MicrofrontendList: React.FunctionComponent<IMicrofrontendListProps> = ({ applicationId }) => {\n  const [{ data: microfrontends, loading }, refetch] = useLoggedApiRequest(`/microfrontends?applicationId=${applicationId}`);\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n  return (\n    <Section title=\"Microfrontends\" loading={loading}>\n      <Row gutter={[16, 24]}>\n        {microfrontends &&\n          microfrontends.map((microfrontend: any) => (\n            <Col span={6} key={microfrontend.id}>\n              <Card title={microfrontend.name} extra={<Link to={`../microfrontend/${microfrontend.id}`}>Edit</Link>}>\n                {microfrontend.name}\n              </Card>\n            </Col>\n          ))}\n      </Row>\n    </Section>\n  );\n};\n\nexport default MicrofrontendList;\n","import * as React from 'react';\nimport { Card, Col, Row } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Section from 'base/components/section';\n\ninterface INamespaceListProps {\n  namespaces: any[];\n}\n\nconst NamespaceList: React.FunctionComponent<INamespaceListProps> = ({ namespaces }) => {\n  return (\n    <Section title=\"Namespaces\">\n      <Row gutter={[16, 24]}>\n        {namespaces &&\n          namespaces.map((microfrontend: any) => (\n            <Col span={6} key={microfrontend.id}>\n              <Card title={microfrontend.name} extra={<Link to={`../namespace/${microfrontend.id}`}>Edit</Link>}>\n                {microfrontend.name}\n              </Card>\n            </Col>\n          ))}\n      </Row>\n    </Section>\n  );\n};\n\nexport default NamespaceList;\n","import * as React from 'react';\n\nimport { Row, Divider, Spin, PageHeader } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nimport './page.css';\n\nexport interface IPageProps {\n  title: string;\n  subTitle?: string;\n  children: React.ReactNode;\n  actions?: Array<React.ReactNode>;\n  loading?: boolean;\n  rootPage?: boolean;\n}\n\nexport default function Page(props: IPageProps) {\n  const history = useHistory();\n  const { title, children, actions, loading, subTitle, rootPage } = props;\n\n  return (\n    <PageHeader\n      className=\"page\"\n      title={title}\n      subTitle={subTitle}\n      extra={actions}\n      {...(rootPage ? {} : { onBack: () => history.goBack() })}\n    >\n      <Divider style={{ marginTop: '0px' }} />\n      {loading ? (\n        <Row justify=\"center\">\n          <Spin size=\"large\" />\n        </Row>\n      ) : (\n          children\n        )}\n    </PageHeader>\n  )\n}","import React, { useEffect } from 'react';\n\nimport { useLoggedApiRequest } from 'base/hooks/request';\nimport { useParams } from 'react-router-dom';\nimport Page from 'base/components/page';\n\nfunction FetchApplication(props: { children: Function; title: string; applicationId?: string }) {\n  const { children, title, applicationId: applicationIdProp } = props;\n  const { applicationId = applicationIdProp } = useParams();\n  const [{ data: application, loading: loadingApplication }, refetch] = useLoggedApiRequest(\n    `/applications/${applicationId}`\n  );\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <Page title={title} loading={loadingApplication}>\n      {!loadingApplication && children(application)}\n    </Page>\n  );\n}\n\nexport default FetchApplication;\n","import React, { useEffect } from 'react';\nimport { useLoggedApiRequest } from 'base/hooks/request';\n\nimport { Redirect, Link } from 'react-router-dom';\nimport { Form, Input, Button, Space } from 'antd';\n\nimport useApiAction from 'base/hooks/api-action';\nimport MicrofrontendList from './microfrontend-list';\nimport NamespaceList from './namespace-list';\nimport FetchApplication from '../fetch';\n\ninterface IApplicationDetailsProps {\n  application: any;\n}\n\nconst ApplicationDetails: React.FunctionComponent<IApplicationDetailsProps> = ({ application }) => {\n  const [{ data, error, loading: savingProfile }, saveApplication] = useApiAction(`/applications/${application.id}`, {\n    method: 'PUT',\n    message: {\n      success: 'Application saved',\n    },\n  });\n  const [{ loading: deployingApplication }, deployApplication] = useApiAction(`/applications/${application.id}/deploy`, {\n    method: 'POST',\n    message: {\n      success: 'Deploy done',\n    },\n  });\n  const [{ data: namespaces, loading: gettingNamespaces }, refetchNamespaces] = useLoggedApiRequest(`/namespaces?applicationId=${application.id}`);\n\n  useEffect(() => {\n    refetchNamespaces();\n  }, [refetchNamespaces]);\n\n  const onFinish = async (data: any) => {\n    await saveApplication({ data });\n  };\n\n  if (gettingNamespaces || !namespaces) return null;\n\n  if (!savingProfile && data && !error) return <Redirect to=\"../application\" />;\n\n  return (\n    <>\n      <Form onFinish={onFinish} initialValues={application}>\n        <Form.Item label=\"Name\" name=\"name\">\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Slack Channel Id\" name=\"slackChannelId\">\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Space>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n            <Link to={`../github?applicationId=${application.id}`}>\n              <Button type=\"ghost\">New Microfrontend</Button>\n            </Link>\n            <Link to={`../namespace/new?applicationId=${application.id}`}>\n              <Button type=\"ghost\">New Namespace</Button>\n            </Link>\n            {namespaces.length === 1 ? (\n              <Link to={`../namespace/${namespaces[0].id}/deploy/next`}>\n                <Button type=\"ghost\">Prepare next deploy</Button>\n              </Link>\n            ) : null\n            }\n            <Button type=\"ghost\" loading={deployingApplication} onClick={() => deployApplication()}>Deploy</Button>\n          </Space>\n        </Form.Item>\n      </Form>\n\n      {namespaces.length > 1 && <NamespaceList namespaces={namespaces} />}\n      <MicrofrontendList applicationId={application.id} />\n    </>\n  );\n};\n\nexport default () => (\n  <FetchApplication title=\"Application details\">\n    {(application: any) => <ApplicationDetails application={application} />}\n  </FetchApplication>\n);\n","import React, { useEffect } from 'react';\nimport { useLoggedApiRequest } from 'base/hooks/request';\n\nimport { Link } from 'react-router-dom';\n\nimport Page from 'base/components/page';\nimport { List } from 'antd';\n\nfunction ApplicationList() {\n  const [{ data: applications }, refetch] = useLoggedApiRequest('/applications', { manual: true });\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  if (!applications) return null;\n  return (\n    <Page title=\"Applications\" rootPage>\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={applications}\n        renderItem={(application: any) => (\n          <List.Item\n            key={application.id}\n            extra={<Link to={`./application/${application.id}`}>Edit</Link>}\n          >\n            <List.Item.Meta\n              title={application.name}\n              description={application.description}\n            />\n          </List.Item>\n        )}\n      />\n    </Page>\n  );\n}\n\nexport default ApplicationList;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport Details from './details';\nimport List from './list';\n\nfunction ApplicationHome() {\n  let match = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${match.path}/:applicationId`}>\n        <Details />\n      </Route>\n      <Route path={match.path}>\n        <List />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default ApplicationHome;\n","import React from 'react';\nimport { useLoggedApiRequest } from 'base/hooks/request';\n\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button, Typography, Timeline } from 'antd';\nimport Page from 'base/components/page';\nconst { Title } = Typography;\n\nconst NewMicrofrontend: React.FC<{\n  microfrontend: any;\n}> = ({ microfrontend }) => {\n  const isNew = !microfrontend.id;\n  const history = useHistory();\n\n  const [, syncMicrofrontend] = useLoggedApiRequest(\n    {\n      url: `/microfrontends/${microfrontend.id}/sync`,\n      method: 'POST',\n    },\n    { manual: true }\n  );\n\n  const [{ data: versions = [] }] = useLoggedApiRequest(`/versions?microfrontendId=${microfrontend.id}`);\n\n  const [{ data: result }, createmicrofrontend] = useLoggedApiRequest(\n    {\n      url: `/microfrontends${isNew ? '' : `/${microfrontend.id}`}`,\n      method: isNew ? 'POST' : 'PUT',\n    },\n    { manual: true }\n  );\n\n  const onFinish = async (values: any) => {\n    await createmicrofrontend({\n      data: {\n        ...values\n      },\n    });\n    history.goBack();\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const handleSyncClick = async () => {\n    await syncMicrofrontend();\n    window.location.reload();\n  };\n\n  if (result) return null;\n\n  return (\n    <Page title={isNew ? 'Creating' : `Editing ${microfrontend.name}`}>\n      <Form\n        labelCol={{ span: 2 }}\n        name=\"basic\"\n        initialValues={microfrontend}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item label=\"Name\" name=\"name\">\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Package name\" name=\"packageName\">\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Save\n          </Button>\n          <Button type=\"ghost\" onClick={handleSyncClick}>\n            Sync Versions\n          </Button>\n        </Form.Item>\n      </Form>\n\n      {isNew ? null : (\n        <>\n          <Title>History</Title>\n          <Timeline>\n            {versions.map((version: any) => (\n              <Timeline.Item key={version.id} color=\"green\">\n                Version {version.name} created at {version.createdAt}\n              </Timeline.Item>\n            ))}\n          </Timeline>\n        </>\n      )}\n    </Page>\n  );\n};\n\nexport default NewMicrofrontend;\n","import React from 'react';\n\nimport { useLoggedApiRequest } from 'base/hooks/request';\nimport { useParams } from 'react-router-dom';\n\nimport MicrofrontendForm from './form';\n\nfunction MicrofrontendDetails() {\n  let { microfrontendId } = useParams();\n  const [{ data: microfrontend, loading }] = useLoggedApiRequest(`/microfrontends/${microfrontendId}`);\n\n  if (loading) return <div>loading</div>;\n\n  return <MicrofrontendForm microfrontend={microfrontend} />;\n}\n\nexport default MicrofrontendDetails;\n","import React from 'react';\nimport MicrofrontendForm from './form';\n\nfunction NewMicrofrontend() {\n  return <MicrofrontendForm microfrontend={{}} />;\n}\n\nexport default NewMicrofrontend;\n","import React, { useEffect } from 'react';\nimport { useLoggedApiRequest } from 'base/hooks/request';\n\nimport { Link } from 'react-router-dom';\n\nimport Page from 'base/components/page';\nimport { List } from 'antd';\n\nfunction MicrofrontendList() {\n  const [{ data: microfrontends }, refetch] = useLoggedApiRequest('/microfrontends', { manual: true });\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  if (!microfrontends) return null;\n\n  return (\n    <Page title=\"Microfrontends\" rootPage>\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={microfrontends}\n        renderItem={(microfrontend: any) => (\n          <List.Item\n            key={microfrontend.id}\n            extra={<Link to={`./microfrontend/${microfrontend.id}`}>Edit</Link>}\n          >\n            <List.Item.Meta title={microfrontend.name} description={microfrontend.description} />\n          </List.Item>\n        )}\n      />\n    </Page>\n  );\n}\n\nexport default MicrofrontendList;\n","import React from 'react';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport Details from './details';\nimport New from './new';\nimport List from './list';\n\nfunction MicrofrontendsHome() {\n  let match = useRouteMatch();\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path={`${match.path}/new`}>\n          <New />\n        </Route>\n        <Route path={`${match.path}/:microfrontendId`}>\n          <Details />\n        </Route>\n        <Route path={match.path}>\n          <List />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default MicrofrontendsHome;\n","import { useLocation } from 'react-router-dom';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import React, { useState } from 'react';\nimport { useGithubApiRequest } from 'base/hooks/request';\nimport Page from 'base/components/page';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport { Descriptions, Button, Form, Input, Radio } from 'antd';\nimport useApiAction from 'base/hooks/api-action';\nimport useQuery from 'base/hooks/query-param';\nimport FetchApplication from 'modules/application/fetch';\n\nfunction ImportRepository(props: { application?: any }) {\n  const { application } = props;\n  const { owner, repositoryName } = useParams();\n  const repositoryFullName = `${owner}/${repositoryName}`;\n  const [form] = Form.useForm();\n  const [importType, setImportType] = useState('application');\n  const [nameAlreadyChanged, setNameAlreadyChanged] = useState(false);\n\n  const onFormChanged = (values: any) => {\n    if (values.importType) setImportType(values.importType);\n    if (values.name) setNameAlreadyChanged(true);\n    if (values.packageName !== undefined && !nameAlreadyChanged) form.setFieldsValue({ name: values.packageName });\n  };\n\n  const shouldShowImportType = !application;\n  const shouldShowApplicationIdField = !application && importType === 'microfrontend';\n\n  const [{ data: repository, loading: loadingRepository }] = useGithubApiRequest(`/repos/${repositoryFullName}`);\n\n  const [{ data: importedApplication, loading: importingApplication }, importApplication] = useApiAction(\n    `/applications/import`,\n    {\n      message: { success: 'Application imported' },\n    }\n  );\n  const [{ data: importedMicrofrontend, loading: importingMicrofrotend }, importMicrofrontend] = useApiAction(\n    `/microfrontends/import`,\n    {\n      message: { success: 'Mifrofrontend imported' },\n    }\n  );\n\n  const onFinish = async (values: any) => {\n    if (values.importType === 'application') {\n      await importApplication({\n        data: {\n          repositoryName: repositoryFullName,\n          packageName: values.packageName,\n          name: values.name,\n        },\n      });\n      return;\n    }\n\n    await importMicrofrontend({\n      data: {\n        repositoryName: repositoryFullName,\n        applicationId: application?.id || values.applicationId,\n        packageName: values.packageName,\n        name: values.name,\n      },\n    });\n  };\n\n  if (!importingApplication && importedApplication) {\n    return <Redirect to={`../../../application/${importedApplication.id}`} />;\n  }\n  if (!importingMicrofrotend && importedMicrofrontend) {\n    return <Redirect to={`../../../microfrontend/${importedMicrofrontend.id}`} />;\n  }\n  if (loadingRepository) return <span>loading</span>;\n\n  return (\n    <Form\n      form={form}\n      initialValues={{\n        importType,\n        name: repository.name,\n        packageName: repository.name,\n      }}\n      onValuesChange={onFormChanged}\n      onFinish={onFinish}\n    >\n      {application && (\n        <Descriptions title=\"Repository infos\">\n          <Descriptions.Item label=\"Application destiny\">{application.name}</Descriptions.Item>\n        </Descriptions>\n      )}\n\n      <Form.Item label=\"Package name\" name=\"packageName\">\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Name\" name=\"name\">\n        <Input />\n      </Form.Item>\n      {shouldShowImportType && (\n        <Form.Item label=\"Import type\" name=\"importType\">\n          <Radio.Group value={importType}>\n            <Radio.Button value=\"application\">Application</Radio.Button>\n            <Radio.Button value=\"microfrontend\">Microfrontend</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n      )}\n\n      {shouldShowApplicationIdField && (\n        <Form.Item label=\"Application Id\" name=\"applicationId\">\n          <Input />\n        </Form.Item>\n      )}\n\n      <div>\n        <Button htmlType=\"submit\" type=\"primary\" disabled={importingApplication || importingMicrofrotend}>\n          Import\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default () => {\n  const importApplicationId = useQuery().get('applicationId');\n\n  if (!importApplicationId) return (\n    <Page title={\"Import repository\"}>\n      <ImportRepository />\n    </Page>\n  );\n\n  return (\n    <FetchApplication title=\"Import repository\" applicationId={importApplicationId}>\n      {(application: any) => <ImportRepository application={application} />}\n    </FetchApplication>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { List, Avatar, Input } from 'antd';\nimport { MessageOutlined, StarOutlined, GithubOutlined, SearchOutlined } from '@ant-design/icons';\n\nimport { useGithubApiRequest } from 'base/hooks/request';\nimport { Link } from 'react-router-dom';\nimport Page from 'base/components/page';\nimport useQuery from 'base/hooks/query-param';\n\nconst IconText: React.FC<{\n  icon: any;\n  text: any;\n}> = ({ icon, text }) => (\n  <span>\n    {React.createElement(icon, { style: { marginRight: 8 } })}\n    {text}\n  </span>\n);\n\nconst Repos: React.FC<{}> = () => {\n  const [searchText, setSearchText] = useState('');\n  const [{ data: repos, loading }] = useGithubApiRequest('/user/repos?type=owner');\n\n  const queryParam = useQuery();\n\n  const getUrlToImport = (repo: any) => {\n    let url = `./github/import/${repo.full_name}`;\n    if (queryParam.get('applicationId')) url += `?applicationId=${queryParam.get('applicationId')}`;\n    return url;\n  };\n\n  return (\n    <Page title=\"Github Repositories\" rootPage>\n      <Input\n        size=\"large\"\n        placeholder=\"Search\"\n        prefix={<SearchOutlined />}\n        value={searchText}\n        onChange={(e) => setSearchText(e.target.value)}\n      />\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        loading={loading}\n        dataSource={(repos || []).filter((repo: any) => repo.name.indexOf(searchText) > -1)}\n        renderItem={(repo: any) => (\n          <List.Item\n            key={repo.id}\n            actions={[\n              <IconText icon={StarOutlined} text={repo.stargazers_count} key=\"list-vertical-star-o\" />,\n              <IconText icon={MessageOutlined} text={repo.open_issues} key=\"list-vertical-message\" />,\n            ]}\n            extra={<Link to={getUrlToImport(repo)}>Import</Link>}\n          >\n            <List.Item.Meta\n              avatar={<Avatar icon={<GithubOutlined />} />}\n              title={repo.name}\n              description={repo.description}\n            />\n          </List.Item>\n        )}\n      />\n    </Page>\n  );\n};\n\nexport default Repos;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport Import from './import';\nimport Repositories from './repositories';\n\nfunction GithubHome() {\n  let match = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${match.path}`}>\n        <Repositories />\n      </Route>\n      <Route path={`${match.path}/import/:owner/:repositoryName`}>\n        <Import />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default GithubHome;\n","import React from 'react';\nimport { useLoggedApiRequest } from 'base/hooks/request';\nimport useApiAction from 'base/hooks/api-action';\nimport Page from 'base/components/page';\n\nimport { Form, Input, Button, Space, Spin } from 'antd';\n\nfunction Profiile() {\n  const [{ data: profile, loading }] = useLoggedApiRequest('/users/me');\n\n  const [{ loading: savingProfile }, saveProfile] = useApiAction('/users/me', {\n    method: 'put',\n    message: {\n      success: 'User saved',\n    },\n  });\n\n  const onFinish = async (data: any) => {\n    await saveProfile({\n      data,\n    });\n  };\n\n  return (\n    <Page title=\"Profile\" rootPage>\n      {loading ? (\n        <Spin size=\"large\" />\n      ) : (\n          <Form name=\"basic\" initialValues={profile} onFinish={onFinish}>\n            <Form.Item label=\"Github Token\" name=\"githubToken\">\n              <Input />\n            </Form.Item>\n\n            <Form.Item label=\"Slack Token\" name=\"slackToken\">\n              <Input />\n            </Form.Item>\n\n            <Form.Item>\n              <Space>\n                <Button type=\"primary\" htmlType=\"submit\" loading={savingProfile}>\n                  Save\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        )}\n    </Page>\n  );\n}\n\nexport default Profiile;\n","import * as React from 'react';\nimport { Timeline } from 'antd';\nimport { useLoggedApiRequest } from 'base/hooks/request';\nimport Section from 'base/components/section';\n\ninterface IDeployListProps {\n  namespaceId: string;\n}\n\nconst DeployList: React.FunctionComponent<IDeployListProps> = ({ namespaceId }) => {\n  const [{ data: history, loading }] = useLoggedApiRequest(`/namespaces/${namespaceId}/history`);\n\n  return (\n    <Section title=\"Deploys\" loading={loading}>\n      <Timeline>\n        {history &&\n          history.deploys.map((deploy: any) => (\n            <Timeline.Item color=\"green\">\n              Deploy {deploy.id} created at {deploy.createdAt}\n            </Timeline.Item>\n          ))}\n      </Timeline>\n    </Section>\n  );\n};\n\nexport default DeployList;\n","import React from 'react';\n\nimport { useLoggedApiRequest } from 'base/hooks/request';\nimport { useParams } from 'react-router-dom';\nimport Page from 'base/components/page';\n\nfunction FetchNamespace(props: { children: Function; title?: string; namespaceId?: string }) {\n  const { children, title, namespaceId: namespaceIdProp } = props;\n  const { namespaceId = namespaceIdProp } = useParams();\n  const [{ data: namespace, loading: loadingNamespace }] = useLoggedApiRequest(\n    `/namespaces/${namespaceId}`\n  );\n\n  if (loadingNamespace) return null;\n\n  if (!title) return children(namespace);\n\n  return (\n    <Page title={title} loading={loadingNamespace}>\n      {!loadingNamespace && children(namespace)}\n    </Page>\n  );\n}\n\nexport default FetchNamespace;\n","import React from 'react';\n\nimport { Redirect, Link } from 'react-router-dom';\nimport { Form, Input, Button, Space, Modal, Tooltip } from 'antd';\nimport {\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\n\nimport useQuery from 'base/hooks/query-param';\nimport Page from 'base/components/page';\nimport useApiAction from 'base/hooks/api-action';\nimport DeployList from './deploy-list';\nimport FetchNamespace from '../fetch';\n\nconst { confirm } = Modal;\n\ninterface INamespaceDetailsProps {\n  namespace: any;\n}\n\nconst createDeleteConfirm = (deleteNamespace: Function) => () => {\n  confirm({\n    title: 'Are you sure delete this namespace?',\n    icon: <ExclamationCircleOutlined />,\n    content: 'This action cannot be undone',\n    okText: 'Yes',\n    okType: 'danger',\n    cancelText: 'No',\n    onOk() {\n      deleteNamespace();\n    }\n  });\n}\n\nconst NamespaceDetails: React.FunctionComponent<INamespaceDetailsProps> = ({ namespace }) => {\n  const isNew = !namespace.id;\n\n  const [{ data, error, loading: savingNamespace }, saveNamespace] = useApiAction(`/namespaces${isNew ? '' : `/${namespace.id}`}`, {\n    method: isNew ? 'POST' : 'PUT',\n    message: {\n      success: 'Namespace saved',\n    },\n  });\n\n  const [{ data: deletedNamespace, error: errorDeleting, loading: deletingNamespace }, deleteNamespace] = useApiAction(`/namespaces/${namespace.id}`, {\n    method: 'DELETE',\n    message: {\n      success: 'Namespace deleted',\n    },\n  });\n\n  const onFinish = async (namespaceFields: any) => {\n    await saveNamespace({\n      ...namespace, data: {\n        ...namespace,\n        ...namespaceFields\n      }\n    });\n  };\n\n  const savedSuccessfully = !savingNamespace && data && !error;\n  const deletedSuccessfully = !deletingNamespace && deletedNamespace && !errorDeleting;\n  if (savedSuccessfully || deletedSuccessfully) return <Redirect to={`../application/${namespace.applicationId}`} />;\n\n\n  const deleteButton = (\n    <Button\n      type=\"dashed\"\n      onClick={createDeleteConfirm(deleteNamespace)}\n      loading={deletingNamespace}\n      disabled={namespace.isMain}\n    >\n      Delete\n    </Button>\n  );\n  return (\n    <>\n      <Form onFinish={onFinish} initialValues={namespace}>\n        <Form.Item label=\"Name\" name=\"name\">\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Url path\" name=\"path\">\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Space>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n            {\n              !isNew && (\n                namespace.isMain ? (\n                  <Tooltip placement=\"topLeft\" title=\"Cannot delete main namespace\">\n                    {deleteButton}\n                  </Tooltip>\n                ) : deleteButton\n              )\n            }\n            {!isNew && (\n              <Link to={`./${namespace.id}/deploy/next`}>\n                <Button type=\"ghost\">Update next deploy</Button>\n              </Link>\n            )}\n          </Space>\n        </Form.Item>\n\n        {!isNew && <DeployList namespaceId={namespace.id} />}\n      </Form>\n    </>\n  );\n};\n\nexport const Details = () => (\n  <FetchNamespace title=\"Namespace details\">\n    {(namespace: any) => <NamespaceDetails namespace={namespace} />}\n  </FetchNamespace>\n);\n\nexport const New = () => {\n  const applicationId = useQuery().get('applicationId');\n\n  return (\n    <Page title=\"New namespace\">\n      <NamespaceDetails namespace={{ applicationId }} />\n    </Page>\n  );\n};","import React from 'react';\nimport { useLoggedApiRequest, useApiAction } from 'base/hooks/request';\nimport Page from 'base/components/page';\nimport { Form, Select, Space, Button } from 'antd';\nimport FetchNamespace from './fetch';\n\nfunction MicrofrontendVersion(props: { microfrontend: any }) {\n  const { microfrontend } = props;\n  const [{ data: versions, loading }] = useLoggedApiRequest(\n    `/versions?microfrontendId=${microfrontend.id}`\n  );\n\n  if (loading) return <span>loading</span>;\n\n  return (\n    <Form.Item label={microfrontend.name} name={microfrontend.id} required>\n      <Select>\n        {versions.map((version: any) => (\n          <Select.Option key={version.id} value={version.id}>\n            {version.name}\n          </Select.Option>\n        ))}\n      </Select>\n    </Form.Item>\n  );\n}\n\nfunction NamespaceDeploy(props: { namespace: any }) {\n  const { namespace } = props;\n\n  const [{ data: nextDeploy, loading: loadingNamespace }] = useLoggedApiRequest(`/namespaces/${namespace.id}/deploy/next`);\n  const [{ data: microfrontends }] = useLoggedApiRequest(`/microfrontends?applicationId=${namespace.applicationId}`);\n  const [{ loading: savingNextDeploy }, saveNextDeploy] = useApiAction(`/namespaces/${namespace.id}/deploy/next`, {\n    method: 'PUT',\n    message: {\n      success: 'Next deploy saved',\n    },\n  });\n\n\n  const onFinish = async (versions: any) => {\n    await saveNextDeploy({ data: { versions } });\n  };\n\n  if (loadingNamespace) return null;\n\n  return (\n    <Page title={`Configure next deploy in namespace ${namespace.name}`}>\n      <Form name=\"basic\" onFinish={onFinish} initialValues={nextDeploy.versions}>\n        {microfrontends && microfrontends.map((micro: any) => <MicrofrontendVersion key={micro.id} microfrontend={micro} />)}\n        <Form.Item>\n          <Space>\n            <Button type=\"primary\" htmlType=\"submit\" loading={savingNextDeploy}>\n              Save\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </Page>\n  );\n}\n\nexport default () => (\n  <FetchNamespace>\n    {(namespace: any) => <NamespaceDeploy namespace={namespace} />}\n  </FetchNamespace>\n);\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { Details, New } from './details';\nimport Deploy from './deploy';\n\nfunction ApplicationHome() {\n  let match = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${match.path}/new`}>\n        <New />\n      </Route>\n      <Route path={`${match.path}/:namespaceId/deploy/next`}>\n        <Deploy />\n      </Route>\n      <Route path={`${match.path}/:namespaceId`}>\n        <Details />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default ApplicationHome;\n","import React from 'react';\n\nimport { useLoggedApiRequest } from 'base/hooks/request';\n\nfunction Dashboards() {\n  const [{ data, loading }] = useLoggedApiRequest(`/dashboards`);\n\n  if (loading) return <div>loading</div>;\n\n  return (\n    <div>\n      Home\n    </div>\n  );\n}\n\nexport default Dashboards;\n","import { useState } from 'react';\nfunction useLocalStorage(key: string, initialValue?: string): [string | undefined, Function, Function] {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = JSON.parse(window.localStorage.getItem(key) || '');\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: string) => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const clearValue = () => {\n    setStoredValue(undefined);\n    window.localStorage.removeItem(key);\n  };\n\n  return [storedValue, setValue, clearValue];\n}\n\nexport default useLocalStorage;\n","import useLocalStorage from './local-storage';\nimport { configureLoggedUser } from './request';\n\nconst useLoggedUser = (): [any, Function, Function] => {\n  const [auth, setAuth, clearLoggedUser] = useLocalStorage('auth');\n  const setLoggedUser = (loggedUser: any) => {\n    configureLoggedUser(loggedUser);\n    setAuth(loggedUser);\n  };\n  return [auth, setLoggedUser, clearLoggedUser];\n};\n\nexport default useLoggedUser;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Application from 'modules/application';\nimport Microfrontend from 'modules/microfrontend';\nimport { Layout, Menu, Avatar, Dropdown } from 'antd';\nimport { GithubFilled, SolutionOutlined, HomeOutlined, UnorderedListOutlined, MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons';\n\nimport { Switch, Route, Link, useRouteMatch, useHistory } from 'react-router-dom';\n\nimport Github from 'modules/github';\nimport Profile from 'modules/account/profile';\nimport Namespace from 'modules/namespace';\nimport Dashboards from './dashboards';\n\nimport Logo from 'assets/logo.svg';\nimport useLoggedUser from 'base/hooks/user';\n\nconst { Sider, Header, Content, Footer } = Layout;\n\nfunction hashCode(str: string) {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction intToRGB(i: number) {\n  var c = (i & 0x00FFFFFF)\n    .toString(16)\n    .toUpperCase();\n\n  return `#${\"00000\".substring(0, 6 - c.length) + c}`;\n}\n\nfunction FullApp() {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const [loggedUser] = useLoggedUser();\n  const [collapsed, setCollapsed] = useState(false);\n\n  const items = [\n    { label: 'Home', icon: HomeOutlined, rootComponent: Dashboards, url: '/' },\n    { label: 'Repositories', icon: GithubFilled, rootComponent: Github, url: '/github' },\n    { label: 'Applications', icon: SolutionOutlined, rootComponent: Application, url: '/application' },\n    { label: 'Microfrontends', icon: UnorderedListOutlined, rootComponent: Microfrontend, url: '/microfrontend' },\n    { rootComponent: Profile, url: '/profile' },\n    { rootComponent: Namespace, url: '/namespaces' },\n  ];\n\n  const reverseItems: Array<any> = Object.assign([], items);\n  reverseItems.reverse();\n  const selectedMenuIndex =\n    reverseItems.length -\n    reverseItems.findIndex((item) => history.location.pathname.replace(match.path, '').startsWith(item.url)) -\n    1;\n\n  const iconProps = {\n    className: 'App__menu-collapser',\n    onClick: () => setCollapsed(!collapsed),\n  }\n\n  return (\n    <Layout>\n      <Sider\n        collapsible\n        trigger={null}\n        collapsed={collapsed}\n      >\n        <Link to={`${match.path}/`}>\n          <div className=\"App__logo-name\">\n            <img src={Logo} className=\"App__logo\" alt=\"logo\" />\n            <span className=\"App__label\">Marketplace</span>\n          </div>\n        </Link>\n        <Menu selectedKeys={[selectedMenuIndex.toString()]} theme=\"dark\" mode=\"inline\">\n          {items\n            .filter((item) => item.label && item.icon)\n            .map((item, i) => (\n              <Menu.Item key={i} icon={item.icon && <item.icon />}>\n                <Link to={`${match.path}${item.url}`}>\n                  {item.label}\n                </Link>\n              </Menu.Item>\n            ))\n          }\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header className=\"App__header\">\n          {collapsed ? <MenuUnfoldOutlined {...iconProps} /> : <MenuFoldOutlined {...iconProps} />}\n          <div className=\"App__header-actions\">\n            <Dropdown overlay={(\n              <Menu style={{ marginTop: '8px' }}>\n                <Menu.Item key=\"0\">\n                  <Link to={`${match.path}/profile`}>Profile</Link>\n                </Menu.Item>\n                <Menu.Divider />\n                <Menu.Item><Link to=\"/logout\">Logout</Link></Menu.Item>\n              </Menu>\n            )} trigger={['click']}>\n              <Avatar className=\"App__header-avatar\" style={{ backgroundColor: intToRGB(hashCode(loggedUser.name)) }} alt=\"avatar\">{loggedUser.name.split(' ').map((name: string) => name.charAt(0)).join('')}</Avatar>\n            </Dropdown>\n          </div>\n        </Header>\n        <Content style={{ padding: '18px' }}>\n          <Switch>\n            {reverseItems.map(({ url, rootComponent: RootComponent }, i) => (\n              <Route key={i} path={`${match.path}${url}`}>\n                <RootComponent />\n              </Route>\n            ))}\n          </Switch>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Copyright © 2020 Matheus Martins</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FullApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react';\n\nimport { useApiRequest } from 'base/hooks/request';\n\nfunction Login(props: { handleLogin: Function, handleError: Function, code: string }) {\n  const { handleLogin, handleError, code } = props;\n\n  const [{ data, error }] = useApiRequest({\n    url: `/oauth/github?code=${code}`,\n    method: 'POST',\n  });\n\n  useEffect(() => {\n    if (data) {\n      handleLogin(data);\n      window.location.href = './';\n    } else if (error) {\n      handleError();\n    }\n  }, [data, error, handleLogin, handleError]);\n\n  return <div>Loading</div>;\n}\n\nexport default Login;\n","import React from 'react';\nimport useLoggedUser from '../../base/hooks/user';\n\nfunction Logout() {\n  const [auth, , clearValue] = useLoggedUser();\n\n  if (auth) {\n    clearValue();\n    window.location.href = '/';\n    return <></>;\n  }\n  return <></>;\n}\n\nexport default Logout;\n","import React from 'react';\n\n\nconst REDIRECT_URI = process.env.NODE_ENV === 'development' ?\n  `${window.location.origin}` :\n  `${window.location.origin}${process.env.PUBLIC_URL}`;\n\nfunction LandingPage() {\n  return (\n    <div>\n      <a\n        href={`https://github.com/login/oauth/authorize?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&redirect_uri=${REDIRECT_URI}`}\n      >\n        login with github\n      </a>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\n\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom';\n\nimport Home from './home';\nimport Login from 'modules/github/login';\nimport Logout from 'modules/account/logout';\nimport LandingPage from 'modules/landing';\nimport useLoggedUser from 'base/hooks/user';\nimport { configureLoggedUser } from 'base/hooks/request';\n\nconst LANDING_PAGE_URL = '/';\nconst LOGGED_HOME_URL = '/home';\n\nconst NotLoggedIn = () => {\n  const [loggedUser, setLoggedUser] = useLoggedUser();\n  const history = useHistory();\n  const code = window.location.search.split('=')[1];\n\n  if (loggedUser) {\n    return <Redirect to={LOGGED_HOME_URL} />;\n  }\n\n  if (code) {\n    return <Login handleLogin={setLoggedUser} handleError={() => history.push('/')} code={code} />;\n  }\n\n  return <LandingPage />\n}\n\nconst LoggedIn = () => {\n  const [loggedUser] = useLoggedUser();\n  const [requestConfigured, setRequestConfigured] = useState(false);\n\n  if (!loggedUser) {\n    return <Redirect to={LANDING_PAGE_URL} />;\n  }\n\n  if (!requestConfigured) {\n    configureLoggedUser(loggedUser);\n    setRequestConfigured(true);\n  }\n\n  return <Home />\n}\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <NotLoggedIn />\n      </Route>\n      <Route path=\"/home\">\n        <LoggedIn />\n      </Route>\n      <Route path=\"/logout\">\n        <Logout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Router;\n","import React from 'react';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport MainRouter from './router';\n\nfunction App() {\n  return (\n    <Router>\n      <MainRouter />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}